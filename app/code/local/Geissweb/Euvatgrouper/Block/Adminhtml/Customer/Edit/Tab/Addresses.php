<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL:
 * http://www.geissweb.de/eula/
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension
 * to newer versions in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @category    Mage
 * @package     Geissweb_Euvatgrouper
 * @copyright   Copyright (c) 2011 GEISS WeblÃ¶sungen (http://www.geissweb.de)
 * @license     http://www.geissweb.de/eula/ GEISSWEB End User License Agreement
 */
class Geissweb_Euvatgrouper_Block_Adminhtml_Customer_Edit_Tab_Addresses extends Mage_Adminhtml_Block_Customer_Edit_Tab_Addresses
{
    public function __construct()
	{
		parent::__construct();
		$this->setTemplate('euvatgrouper/vat_addresses.phtml');
	}


	/**
	 * Initialize form object
	 * @return Mage_Adminhtml_Block_Customer_Edit_Tab_Addresses
	 */
	public function initForm()
	{
		parent::initForm();
		$form = $this->getForm();

		$vat_fieldset = $form->addFieldset('vat_fieldset', array(
				'legend'    => Mage::helper('euvatgrouper')->__("VAT Number Validation Results"))
		);

		$vat_attributes = Mage::getModel('eav/entity_attribute')->getCollection()
						->addFieldToFilter('entity_type_id', array('eq' => 2))
						->addFieldToFilter('attribute_code',
							array('in' => array(
								'vat_request_id',
								'vat_is_valid',
								'vat_request_date',
								'vat_request_success',
								'vat_trader_name',
								'vat_trader_company_type',
								'vat_trader_address'
							))
						);
		foreach ($vat_attributes as $attribute) {
			$attribute->setFrontendLabel(Mage::helper('customer')->__($attribute->getFrontend()->getLabel()));
			$attribute->unsIsVisible();
		}
		$this->_setFieldset($vat_attributes, $vat_fieldset);
		$form->getElement('vat_is_valid')->setReadonly(true,true);
		$form->getElement('vat_request_id')->setReadonly(true,true);
		$form->getElement('vat_request_date')->setReadonly(true,true);
		$form->getElement('vat_request_success')->setReadonly(true,true);
		$form->getElement('vat_trader_name')->setReadonly(true,true);
		$form->getElement('vat_trader_company_type')->setReadonly(true,true);
		$form->getElement('vat_trader_address')->setReadonly(true,true);

		$customer = Mage::registry('current_customer');
		$addressModel = Mage::getModel('customer/address');
		$addressModel->setCountryId(Mage::helper('core')->getDefaultCountry($customer->getStore()));
		$addressCollection = $customer->getAddresses();
		$this->assign('customer', $customer);
		$this->assign('addressCollection', $addressCollection);
		$form->setValues($addressModel->getData());
		$this->setForm($form);

		return $this;
	}

}