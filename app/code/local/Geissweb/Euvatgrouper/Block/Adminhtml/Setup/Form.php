<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL:
 * http://www.geissweb.de/eula/
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension
 * to newer versions in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @package     Geissweb_Euvatgrouper
 * @copyright   Copyright (c) 2011 GEISS WeblÃ¶sungen (http://www.geissweb.de)
 * @license     http://www.geissweb.de/eula/ GEISSWEB End User License Agreement
 */

class Geissweb_Euvatgrouper_Block_Adminhtml_Setup_Form extends Mage_Adminhtml_Block_Widget_Form {

    protected $_helper;

    protected function _construct()
    {
        parent::_construct();

        $form = new Varien_Data_Form(array(
            'id'      => 'euvat_setup',
            'method'  => 'post',
            'enctype' => 'multipart/form-data',
            'action'  => $this->getUrl('*/*/setup', array('_current' => true)),
        ));

        $form->setUseContainer(true);
        $this->setForm($form);

        $this->_helper = Mage::helper('euvatgrouper');

        return $this;
    }

    protected function _prepareForm()
    {
        $fieldset = $this->getForm()
            ->addFieldset('settings', array(
                'legend' => $this->_helper->__('Settings')
            ));


        $fieldset->addField('license_key', 'text', array(
            'label' => $this->_helper->__('Your license key'),
            'name' => 'license_key',
            'required'  => true,
            'after_element_html'=>'<br><small>'.$this->_helper->__('Please use the same license key for your production system and your testing/development systems.').'</small><br/><a href="https://www.geissweb.de/downloadable/customer/products/" target="_blank">'.$this->_helper->__('Get your key here.').'</a>'
        ));

        $fieldset->addField('country', 'select', array(
            'label'     => $this->_helper->__('Your Country'),
            'name'      => 'country',
            'required'  => true,
            'values'    => Mage::helper('euvatgrouper')->getEuCountriesOptionArray()
        ));

        $fieldset->addField('vat_id', 'text', array(
            'label' => $this->_helper->__('Your VAT number'),
            'name' => 'vat_id',
            'required'  => true,
            'after_element_html'=>'<br><small>'.$this->_helper->__('Provide your full number including country prefix, without whitespaces, dots or slahes. Example: DE267070673').'</small>'
        ));

        $fieldset->addField('execute_vat_settings', 'checkbox', array(
            'label'     => Mage::helper('euvatgrouper')->__('VAT Configuration Setup'),
            'name'      => 'execute_vat_settings',
            'checked' => true,
            'value'  => '1',
            'disabled' => false,
            'after_element_html' => $this->_helper->__('Automatically apply default VAT configuration store settings for EU countries').'<br/>'.
'<ul class="messages"><li class="notice-msg"><ul><li><span>'.$this->_helper->__('This will overwrite some of your store configuration values.').' <a href="https://www.geissweb.de/docs/doku.php/wiki:magento_euvat_auto_setup" target="blank">'.$this->_helper->__('Read more').'</a></span></li></ul></li></ul>'
        ));

        $fieldset->addField('execute_tax_rules', 'checkbox', array(
            'label'     => Mage::helper('euvatgrouper')->__('Tax Rules Setup'),
            'name'      => 'execute_tax_rules',
            'checked' => true,
            'onchange' => "toggleMaps()",
            'value'  => '1',
            'disabled' => false,
            'after_element_html' => $this->_helper->__('Automatically create tax classes, tax rates and tax rules (old ones will be deleted).').'<br/>'.
                '<ul class="messages"><li class="notice-msg"><ul><li><span>'.$this->_helper->__('This will replace all tax classes, rates and rules.').'</span></li></ul></li></ul>'.
                '<script type="text/javascript">
                    function toggleMaps() {
                        $("ptcm-table").toggle();
                        $("ctcm-table").toggle();
                        $("add_reduced").toggle();
                        $("add_digital").toggle();
                        $("add_zero").toggle();
                        //$("reduced_rate").toggle();
                    }
                </script>'
        ));

        $fieldset->addField('add_digital', 'checkbox', array(
            'label'     => Mage::helper('euvatgrouper')->__(''),
            'name'      => 'add_digital',
            'checked' => false,
            'value'  => '1',
            'disabled' => false,
            'after_element_html' => $this->_helper->__('Also add rates and rule for digital products and services (for telecommunications, broadcasting & electronic services)')
        ));

        $fieldset->addField('add_zero', 'checkbox', array(
            'label'     => Mage::helper('euvatgrouper')->__(''),
            'name'      => 'add_zero',
            'checked' => false,
            'value'  => '1',
            'disabled' => false,
            'after_element_html' => $this->_helper->__('Also add rates and rule for not taxable products.')
        ));

        $fieldset->addField('add_reduced', 'checkbox', array(
            'label'     => Mage::helper('euvatgrouper')->__(''),
            'name'      => 'add_reduced',
            'checked' => false,
            'onchange' => "toggleRate()",
            'value'  => '1',
            'disabled' => false,
            'after_element_html' => $this->_helper->__('Also add rates and rule for products with reduced VAT').
                '<script type="text/javascript">
                    function toggleRate() {
                        $("reduced_rate").toggle();
                        $("reduced_rate_notice").toggle();
                    }
                </script>'
        ));
        $fieldset->addField('reduced_rate', 'text', array(
            'label'     => $this->_helper->__('Reduced rate'), //Mage::helper('euvatgrouper')->__('Products with a reduced VAT rate')
            'name'      => 'reduced_rate',
            'value'  => '',
            'style' => 'display:none',
            'disabled' => false,
            'title' => Mage::helper('euvatgrouper')->__('Please specify the reduced rate.')
        ));


        $fieldset->addType('product_tax_class_map','Geissweb_Euvatgrouper_Model_Setup_IdMap');
        $fieldset->addField('product_tax_class_mapping', 'product_tax_class_map', array(
            'label' => $this->_helper->__('Tax class mapping'), //Product tax class mapping
            'name' => 'ptcm',
            'required'  => false,
            'base_values'=> Mage::getResourceModel('tax/class_collection')->addFieldToFilter('class_type', Mage_Tax_Model_Class::TAX_CLASS_TYPE_PRODUCT)->load()->toOptionArray(),
            'new_values' => Mage::helper('euvatgrouper/setup')->getNewProductTaxClasses(),
            'after_element_html'=>'<small>'.$this->_helper->__('The product attribute <i>tax_class_id</i> of your existing products will be updated with the new value.').'</small>',
        ));

        $fieldset->addType('customer_tax_class_map','Geissweb_Euvatgrouper_Model_Setup_IdMap');
        $fieldset->addField('customer_tax_class_mapping', 'customer_tax_class_map', array(
            'label' => '',//Customer tax class mapping
            'name' => 'ctcm',
            'required'  => false,
            'base_values'=> Mage::getResourceModel('tax/class_collection')->addFieldToFilter('class_type', Mage_Tax_Model_Class::TAX_CLASS_TYPE_CUSTOMER)->load()->toOptionArray(),
            'new_values' => Mage::helper('euvatgrouper/setup')->getNewCustomerTaxClasses(),
            'after_element_html'=>'<small>'.$this->_helper->__('The customer group attribute <i>tax_class_id</i> of your existing customer groups will be updated with the new value.').'</small>',
        ));

        $fieldset->addField('script', 'label', array(
            'after_element_html' => '<script type="text/javascript">
                                        //< ![CDATA[
                                        var setupForm = new varienForm("euvat_setup");
                                        //]]>
                                    </script>'
        ));

        return parent::_prepareForm();
    }

}